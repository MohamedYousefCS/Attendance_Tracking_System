@using System.Reflection
@using System.Text.RegularExpressions
@model IEnumerable<object>




@functions {
    List<string> GetSelectedProperties(object model, List<string> propertyNames)
    {
        if (model == null)
        {
            throw new ArgumentNullException(nameof(model));
        }
        List<string> values = new List<string>();
        foreach (var propertyName in propertyNames)
        {
            var value = GetPropertyValue(model, propertyName);
            values.Add(value);
        }
        return values;
    }

    private string GetPropertyValue(object model, string propertyName)
    {
        if (propertyName.Equals("Name", StringComparison.OrdinalIgnoreCase))
        {
            var firstNameProperty = model.GetType().GetProperty("Fname", BindingFlags.IgnoreCase | BindingFlags.Public | BindingFlags.Instance);
            var lastNameProperty = model.GetType().GetProperty("Lname", BindingFlags.IgnoreCase | BindingFlags.Public | BindingFlags.Instance);
            if (firstNameProperty != null && lastNameProperty != null)
            {
                var firstName = firstNameProperty.GetValue(model)?.ToString();
                var lastName = lastNameProperty.GetValue(model)?.ToString();
                if (!string.IsNullOrEmpty(firstName) && !string.IsNullOrEmpty(lastName))
                    return $"{firstName} {lastName}";
            }
        }
        else
        {
            var property = model.GetType().GetProperties().FirstOrDefault(p => string.Equals(p.Name, propertyName, StringComparison.OrdinalIgnoreCase));
            if (property != null)
            {
                return property.GetValue(model)?.ToString();
            }
            else
            {
                foreach (var navigationProperty in model.GetType().GetProperties().Where(p => !p.PropertyType.IsValueType && p.PropertyType != typeof(string)))
                {
                    var relatedEntity = navigationProperty.GetValue(model);
                    if (relatedEntity != null)
                    {
                        var value = GetPropertyValue(relatedEntity, propertyName);
                        if (value != null)
                            return value;
                    }
                }
            }
        }
        return null;
    }

    private string SplitPropertyName(string propertyName)
    {
        return Regex.Replace(propertyName, "([a-z])([A-Z])", "$1 $2");
    }

    private string GetId(object model)
    {
        var idProperty = model.GetType().GetProperty("Id", BindingFlags.IgnoreCase | BindingFlags.Public | BindingFlags.Instance);
        if (idProperty != null)
        {
            var id = idProperty.GetValue(model)?.ToString();
            return id;
        }
        return null;
    }
}

<table id="dataTable" class="display">
    <thead>
        <tr>
            @foreach (var propertyName in (List<string>)ViewData["propertiesToShow"])
            {
                <th>@SplitPropertyName(propertyName)</th>
            }
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)
        {
            <tr>
                @foreach (var value in GetSelectedProperties(item, (List<string>)ViewData["propertiesToShow"]))
                {
                    <td>@value</td>
                }
                <td class="lastTd">
                    @if (ViewBag.Controller == "Employee" && ViewBag.Action == "index")
                    {

                        <a asp-action="Details" asp-controller="Employee" asp-route-id="@GetId(item)"><i class="fa-solid fa-eye text-primary"></i></a>
                        @: &nbsp;&nbsp;
                        <a asp-action="Update" asp-controller="Employee" asp-route-id="@GetId(item)"><i class="fa-solid fa-pen-to-square text-secondary"></i></a>

                        @: &nbsp;&nbsp;
                        <a asp-action="Delete" asp-controller="Employee" asp-route-id="@GetId(item)" onclick="return confirmDelete('@GetId(item)')">
                            <i class="fa-solid fa-trash-can text-danger"></i>
                        </a>
                    }
                    else if (ViewBag.Controller == "Security" && ViewBag.Action == "AllStudents" || ViewBag.Action == "AllInstructors")
                    {

                        <div class="row">
                            
                            @{
                                var studentId = GetId(item); // Rename 'id' to 'studentId'
                            }          <div class="col-md-4">
@*                                     <form method="post" asp-action="ConfirmStudentAttendace" asp-controller="Security" asp-route-id="@studentId">
 *@                                        <button type="submit" class="btn btn-success btn-sm confirmAtt" data-id="@studentId" @{
                                            // if (DateTime.Now.TimeOfDay > new TimeSpan(1, 0, 0) & DateTime.Now.TimeOfDay < new TimeSpan(15, 0, 0))
                                            // {
                                            //         @:disabled
                                            // }
                                        }>
                                            Confirm Attendance
                                        </button>    
@*                                     </form>
 *@                                </div>
                                <div class="col-md-4">
                                    @* <form method="post" asp-action="ConfirmStudentCheckout" asp-controller="Security" asp-route-id="@studentId"> *@
                                <button type="submit" class="btn btn-danger btn-sm leave " data-id="@studentId">Confirm Leave</button>
                                    @* </form> *@
                                </div>
                            
                        </div>


                    }
                    else
                    {
                        <a asp-action="Details" asp-controller="@nameof(Model)" asp-route-id="@GetId(item)"><i class="fa-solid fa-eye text-primary"></i></a> @:&nbsp;&nbsp;
                        <a asp-action="Update" asp-controller="@nameof(Model)" asp-route-id="@GetId(item)"><i class="fa-solid fa-pen-to-square text-secondary"></i></a>

                        @: &nbsp;&nbsp;
                        <a asp-action="Delete" asp-controller="@nameof(Model)" asp-route-id="@GetId(item)" onclick="return confirmDelete('@GetId(item)')">
                            <i class="fa-solid fa-trash-can text-danger"></i>
                        </a>
                    }
                </td>
            </tr>
        }

    </tbody>

</table>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>

    function confirmDelete(employeeId) {
        if (confirm("Are you sure you want to delete this employee?")) {
            alert("The employee has been deleted successfully.");
            return true;
        } else {
            return false;
        }
    }


        // $(document).ready(() => {
        //     $(".confirmAtt").each(function () {
        //         let btnAtt = $(this);
        //         let studentId = btnAtt.data('id');
        //         console.log(studentId);
        //         $.get('@Url.Action("ConfirmStudentAttendace", "Security")', { Id: studentId })
        //             .done(function (data) {
        //                 if (!data.isAdded) {
        //                     btnAtt.prop('disabled', true);
        //                     console.log("confirmed");
        //                 }
        //             });

        //         btnAtt.click(() => {
        //             $.get('@Url.Action("ConfirmStudentAttendace", "Security")', { Id: studentId })
        //                 .done(function (data) {
        //                     if (data.isAdded) {
        //                         btnAtt.prop('disabled', true);
        //                         console.log("confirmed");
        //                     } else {
        //                         btnAtt.prop('disabled', true);
        //                     }
        //                 });
        //         });
        //     });
        // });


        //////////////////////////////////////
    $(document).ready(() => {
        $(".confirmAtt").click(function () {
            let btnAtt = $(this); // Select the clicked button
            let studentId = btnAtt.data('id'); // Get the student ID associated with the clicked button
            console.log(studentId);
            // Function to handle button click
            function handleButtonClick() {
                $.get('@Url.Action("ConfirmStudentAttendace", "Security")', { Id: studentId })
                    .done(function (data) {
                        if (data.isAdded) {
                            btnAtt.prop('disabled', true);
                            console.log("confirmed");
                        } else {
                            btnAtt.prop('disabled', true);
                        }
                    });
            }

            // Initial check on page load
            $.get('@Url.Action("ConfirmStudentAttendace", "Security")', { Id: studentId })
                .done(function (data) {
                    if (!data.isAdded) {
                        btnAtt.prop('disabled', true);
                        console.log("confirmed");
                    }
                });

            // Call the handleButtonClick function when the button is clicked
            handleButtonClick();
        });
    });



    $(document).ready(() => {
        $(".leave").click(function () {
            let btn = $(this); // Select the clicked button
            let studentId = btn.data('id'); // Get the student ID associated with the clicked button
            console.log(studentId);
            // Function to handle button click
            function handleButtonClick() {
                $.get('@Url.Action("ConfirmStudentCheckout", "Security")', { Id: studentId })
                    .done(function (data) {
                        if (data.isAdded) {
                            btn.prop('disabled', true);
                            console.log("confirmed");
                        } else {
                            btn.prop('disabled', true);
                        }
                    });
            }

            // Initial check on page load
            $.get('@Url.Action("ConfirmStudentCheckout", "Security")', { Id: studentId })
                .done(function (data) {
                    if (!data.isAdded) {
                        btn.prop('disabled', true);
                        console.log("confirmed");
                    }
                });

            // Call the handleButtonClick function when the button is clicked
            handleButtonClick();
        });
    });


</script>